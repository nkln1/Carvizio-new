import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { ScrollArea } from "@/components/ui/scroll-area";
import { MessageSquare, ArrowLeft, Eye, FileText, Calendar, CreditCard, CheckCircle2 } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import { format } from "date-fns";

export function MessagesUI({ messages, onBack, onViewRequestDetails, selectedMessageRequest, offer, userId, serviceName }) {
  const formatMessageTime = (timestamp) => format(new Date(timestamp), "HH:mm");
  
  return (
    <Card className="border-[#00aff5]/20">
      <CardHeader>
        <CardTitle className="text-[#00aff5] flex items-center gap-2">
          <MessageSquare className="h-5 w-5" /> Mesaje
        </CardTitle>
        <CardDescription>Comunicare directă cu clienții</CardDescription>
      </CardHeader>
      <CardContent>
        <Button variant="ghost" size="sm" onClick={onBack} className="hover:bg-gray-100">
          <ArrowLeft className="h-4 w-4 mr-2" /> Înapoi
        </Button>
        {selectedMessageRequest && (
          <div className="bg-gray-50 rounded-lg p-4 space-y-4 text-sm">
            <h4 className="font-medium flex items-center gap-2 text-gray-700">
              <FileText className="h-4 w-4" /> Cererea Clientului
            </h4>
            <p><span className="text-gray-600">Titlu:</span> {selectedMessageRequest.title}</p>
            <p><span className="text-gray-600">Descriere:</span> {selectedMessageRequest.description}</p>
            <p><span className="text-gray-600">Data Preferată:</span> {format(new Date(selectedMessageRequest.preferredDate), "dd.MM.yyyy")}</p>
            <Button variant="ghost" size="sm" onClick={onViewRequestDetails} className="text-blue-500 hover:text-blue-700 hover:bg-blue-50">
              <Eye className="h-4 w-4 mr-2" /> Detalii cerere
            </Button>
          </div>
        )}
        <ScrollArea className="h-[400px] pr-4">
          <AnimatePresence>
            {messages.map((message) => (
              <motion.div key={message.id} initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.3 }} className={`flex ${message.fromId === userId ? "justify-end" : "justify-start"}`}>
                <div className={`max-w-[80%] ${message.fromId === userId ? "bg-blue-500 text-white rounded-t-2xl rounded-l-2xl" : "bg-gray-100 rounded-t-2xl rounded-r-2xl"} p-3 relative`}>
                  <p className="text-sm whitespace-pre-wrap break-words">{message.content}</p>
                  <div className={`flex items-center gap-1 mt-1 text-xs ${message.fromId === userId ? "text-blue-100" : "text-gray-500"}`}>{formatMessageTime(message.createdAt)}</div>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
        </ScrollArea>
      </CardContent>
    </Card>
  );
}

export default MessagesUI;
