HOMEPAGE

import Hero from "@/components/Hero";
import HowItWorks from "@/components/HowItWorks";
import Benefits from "@/components/Benefits";
import FAQ from "@/components/FAQ";
import AppPreview from "@/components/AppPreview";
import Footer from "@/components/Footer";
import Navigation from "@/components/Navigation";
import TestimonialCarousel from "@/components/TestimonialCarousel";
import { useEffect } from "react";
import { ParallaxWrapper } from "@/components/ui/parallax-wrapper";

export default function Home() {
  useEffect(() => {
    document.title = "CARVIZIO - Găsește service auto rapid și ușor";
  }, []);

  return (
    <div className="min-h-screen bg-gray-50">
      <Navigation />
      <ParallaxWrapper offset={0}>
        <Hero />
      </ParallaxWrapper>
      <ParallaxWrapper offset={30}>
        <HowItWorks />
      </ParallaxWrapper>
      <ParallaxWrapper offset={40}>
        <Benefits />
      </ParallaxWrapper>
      <ParallaxWrapper offset={50}>
        <TestimonialCarousel />
      </ParallaxWrapper>
      <ParallaxWrapper offset={50}>
        <AppPreview />
      </ParallaxWrapper>
      <ParallaxWrapper offset={30}>
        <FAQ />
      </ParallaxWrapper>
      <Footer />
    </div>
  );
}


HERO

import { ChevronRight } from "lucide-react";

export default function Hero() {
  const scrollToSection = (id: string) => {
    const section = document.getElementById(id);
    if (section) {
      section.scrollIntoView({ behavior: "smooth" });
    }
  };

  return (
    <div className="relative bg-gray-900 overflow-hidden">
      <div className="absolute inset-0">
        <img
          className="w-full h-full object-cover opacity-50"
          src="https://i.ibb.co/q7mrkwc/carvizio.jpg"
          alt="Mechanic working on car"
        />
        <div className="absolute inset-0 bg-gradient-to-r from-gray-900 via-transparent to-gray-900 opacity-90"></div>
      </div>
      <div className="relative max-w-7xl mx-auto py-24 px-6 sm:py-32 sm:px-12 lg:px-16 flex flex-col items-center text-center">
        <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-6xl lg:text-7xl drop-shadow-lg">
          Găsește cel mai bun service auto din zona ta,
          <br />
          <span className="text-[#00aff5]">rapid, ușor și GRATUIT!</span>
        </h1>
        <p className="mt-6 text-lg sm:text-xl text-gray-300 max-w-3xl">
          Descoperă service-uri auto de încredere în zona ta. Primește cotații
          rapide, programează-te în câteva minute și repară-ți mașina fără bătăi
          de cap.
        </p>
        <div className="mt-10 flex space-x-4">
          <button className="inline-flex items-center px-8 py-3 border border-transparent text-lg font-medium rounded-full text-white bg-[#00aff5] hover:bg-blue-700 shadow-lg transition-transform transform hover:scale-105">
            Începe acum
            <ChevronRight className="ml-2 h-6 w-6" />
          </button>
          <button
            onClick={() => scrollToSection("how-it-works")}
            className="inline-flex items-center px-8 py-3 border border-white text-lg font-medium rounded-full text-white bg-transparent hover:bg-gray-800 shadow-lg transition-transform transform hover:scale-105"
          >
            Află mai multe
          </button>
        </div>
      </div>
    </div>
  );
}


HOW IT WORKS

import { Users, Wrench, Clock, Star } from "lucide-react";

const steps = [
  {
    icon: Users,
    title: "Creează un cont",
    desc: "Crează un cont într-un minut sau te poți loga cu contul tău Google",
  },
  {
    icon: Wrench,
    title: "Trimite o cerere",
    desc: "Completează datele mașinii tale și descrie tipul reparației necesare/revizie/itp",
  },
  {
    icon: Clock,
    title: "Primește oferte",
    desc: "Primește oferte de la service-urile auto din zona ta",
  },
  {
    icon: Star,
    title: "Alege, programează și oferă recenzie",
    desc: "Alege oferta care ți se potrivește, programează vizita și, ulterior, lasă o recenzie service-ului auto",
  },
];

export default function HowItWorks() {
  return (
    <div id="how-it-works" className="py-16 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center">
          <h2 className="text-4xl font-extrabold text-gray-900 sm:text-5xl">
            Cum funcționează:
          </h2>
          <p className="mt-4 text-lg text-gray-600 font-sans">
            Urmează acești pași simpli pentru a găsi cele mai bune oferte.
          </p>
        </div>
        <div className="mt-16">
          <div className="grid grid-cols-1 gap-8 md:grid-cols-4">
            {steps.map((step, index) => (
              <div
                key={index}
                className="relative text-center p-6 bg-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300 transform hover:scale-105"
              >
                <div className="flex items-center justify-center h-16 w-16 rounded-full bg-blue-100 mx-auto">
                  <step.icon className="h-8 w-8 text-[#00aff5]" />
                </div>
                <h3 className="mt-6 text-xl font-semibold text-gray-900">
                  {step.title}
                </h3>
                <p className="mt-4 text-base text-gray-600 font-sans">{step.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

BENEFITS

import { CheckCircle, Calendar, Star, Clock } from "lucide-react";

const benefits = [
  {
    icon: CheckCircle,
    title: "Cere instant și compară oferte",
    desc: "Primești rapid cotații de preț de la mai multe service-uri și alegi cea mai bună ofertă",
  },
  {
    icon: Calendar,
    title: "Programează-ți vizita rapid",
    desc: "Nu mai pierzi timp cu telefoane. Totul se face online, ușor și rapid",
  },
  {
    icon: Star,
    title: "Transparență și recenzii",
    desc: "Vezi recenzii reale de la alți clienți pentru a face alegerea corectă",
  },
  {
    icon: Clock,
    title: "Economisești timp și bani",
    desc: "Compară prețurile și alege cea mai bună ofertă pentru serviciile auto dorite",
  },
];

export default function Benefits() {
  return (
    <div className="bg-gradient-to-r from-[#00aff5] to-[#005f99] py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-4xl font-extrabold text-center text-white sm:text-5xl">
          De ce să alegi CARVIZIO
        </h2>
        <p className="mt-4 text-lg text-center text-blue-100 font-sans">
          Simplificăm procesul de întreținere auto pentru tine.
        </p>
        <div className="mt-16 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
          {benefits.map((benefit, index) => (
            <div
              key={index}
              className="bg-white rounded-lg shadow-lg p-8 text-center transition-transform transform hover:scale-105 hover:shadow-xl"
            >
              <div className="flex items-center justify-center h-16 w-16 rounded-full bg-[#00aff5] mx-auto">
                <benefit.icon className="h-8 w-8 text-white" />
              </div>
              <h3 className="mt-6 text-xl font-semibold text-gray-900">
                {benefit.title}
              </h3>
              <p className="mt-4 text-base text-gray-600 font-sans">{benefit.desc}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}



FAQ

import { useState } from "react";

const faqs = [
  {
    question: "Cum îmi creez un cont în aplicație?",
    answer:
      'Pentru a-ți crea un cont, mergi în bara de navigare și apasă pe butonul "Conectează-te" sau "Login". Completează formularul cu adresa de email și parola, iar contul se va crea instant. Poți, de asemenea, să folosești un cont de Google sau Facebook pentru a te autentifica mai rapid.',
  },
  {
    question: "Cum trimit o cerere către service-urile auto?",
    answer:
      'După ce te-ai logat, mergi la secțiunea "Trimite cerere" (sau "Solicită ofertă"). Acolo vei completa detaliile mașinii tale (model, an, kilometraj) și vei descrie serviciul necesar (reparație, revizie, ITP, etc.). Aplicația va distribui automat cererea ta către service-urile din zona selectată de tine.',
  },
  {
    question: "Cum primesc cotații de la service-uri?",
    answer:
      "Service-urile auto înregistrate vor vedea cererea ta și îți vor trimite ofertele. Vei primi o notificare în aplicație și, opțional, pe email. Apoi, poți compara prețurile și disponibilitatea fiecărui service înainte să alegi unul.",
  },
  {
    question: "Cum aleg service-ul potrivit dintre mai multe oferte?",
    answer:
      "După ce primești ofertele, poți compara prețurile, detaliile incluse în ofertă și evaluările altor clienți. Selectează oferta care corespunde cel mai bine criteriilor tale (preț, localizare, recenzii, etc.) și confirmă programarea.",
  },
  {
    question: "Cum programez o vizită la service-ul ales?",
    answer:
      "În momentul în care accepți o ofertă, aplicația îți va arăta intervalele orare disponibile. Alege data și ora convenabile, iar service-ul îți va confirma rezervarea printr-un mesaj sau notificare în aplicație.",
  },
  {
    question: "Ce se întâmplă dacă un service anulează programarea?",
    answer:
      "Dacă service-ul anulează, vei primi o notificare și poți fie să ceri o reprogramare, fie să alegi una dintre celelalte oferte primite inițial. Eventualele costuri plătite în avans (dacă există) vor fi rambursate automat.",
  },
];

export default function FAQ() {
  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  const toggleFAQ = (index: number) => {
    setActiveIndex(index === activeIndex ? null : index);
  };

  return (
    <section id="faq" className="bg-white py-16">
      <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-4xl font-extrabold text-center text-gray-900 mb-8">
          Întrebări Frecvente
        </h2>
        <div className="space-y-4">
          {faqs.map((item, index) => (
            <div key={index} className="border border-gray-200 rounded-lg p-4">
              <button
                type="button"
                className="flex justify-between w-full text-left focus:outline-none"
                onClick={() => toggleFAQ(index)}
              >
                <span className="text-lg font-semibold text-gray-800">
                  {item.question}
                </span>
                <span className="text-gray-500 font-bold text-xl">
                  {activeIndex === index ? "−" : "+"}
                </span>
              </button>
              {activeIndex === index && (
                <div className="mt-2 text-gray-600 leading-relaxed">
                  {item.answer}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

FOOTER
import { useLocation } from "wouter";

export default function Footer() {
  const currentYear = new Date().getFullYear();
  const [, setLocation] = useLocation();

  const handleContactClick = () => {
    setLocation("/contact");
    setTimeout(() => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }, 100);
  };

  const handleLogoClick = () => {
    setLocation("/");
    setTimeout(() => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }, 100);
  };

  return (
    <footer className="bg-gray-900">
      <div className="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <nav className="flex flex-wrap justify-center space-x-6 md:space-x-12">
          <button
            onClick={handleContactClick}
            className="text-gray-400 hover:text-gray-300 transition-colors"
          >
            Contactează-ne
          </button>
          <a
            href="#"
            className="text-gray-400 hover:text-gray-300 transition-colors"
          >
            Termeni și condiții
          </a>
        </nav>
        <div className="mt-8 flex flex-col items-center">
          <button 
            onClick={handleLogoClick}
            className="flex items-center space-x-2 hover:opacity-80 transition-opacity duration-200"
          >
            <img
              src="https://i.ibb.co/njmjGNW/Logo.png"
              alt="CARVIZIO Logo"
              className="h-6 sm:h-8 w-auto"
            />
            <span 
              className="text-lg sm:text-xl font-bold text-white font-gugi"
            >
              CARVIZIO
            </span>
          </button>
          <p className="mt-4 text-center text-sm sm:text-base text-gray-400">
            © {currentYear} CARVIZIO. All rights reserved.
          </p>
        </div>
      </div>
    </footer>
  );
}


NAVIGATION

import { useState, useEffect } from "react";
import { useLocation } from "wouter";
import LoginDropdown from "./LoginDropdown";
import { Button } from "./ui/button";
import { Mail } from "lucide-react";

export default function Navigation() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [, setLocation] = useLocation();
  const [unreadClientsCount, setUnreadClientsCount] = useState(0); // Added state for message count

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    // Fetch unread message count (replace with your actual logic)
    // Example:
    const fetchUnreadCount = async () => {
      try {
        const response = await fetch('/api/messages/unread');
        const data = await response.json();
        setUnreadClientsCount(data.count);
      } catch (error) {
        console.error("Error fetching unread message count:", error);
      }
    };
    fetchUnreadCount();
  }, []);


  const handleContactClick = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
    setLocation("/contact");
  };

  const handleLogoClick = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
    setLocation("/");
  };

  return (
    <nav
      className={`sticky top-0 z-50 transition-all duration-300 ${
        isScrolled
          ? "bg-white/75 backdrop-blur-md shadow-md"
          : "bg-white shadow-md"
      }`}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-14 sm:h-16 items-center">
          <button 
            onClick={handleLogoClick}
            className="flex items-center hover:opacity-80 transition-opacity duration-200"
          >
            <img
              src="https://i.ibb.co/njmjGNW/Logo.png"
              alt="CARVIZIO Logo"
              className="h-10 sm:h-16 w-auto"
            />
            <span
              className="ml-2 text-xl sm:text-3xl font-bold text-gray-900 font-gugi"
            >
              CARVIZIO
            </span>
          </button>
          <div className="flex items-center space-x-2 sm:space-x-4">
            <Button
              variant="ghost"
              size="sm"
              onClick={handleContactClick}
              className="text-sm sm:text-base flex items-center gap-1 sm:gap-2 text-gray-600 hover:text-[#00aff5] hover:bg-transparent hover:scale-105 transition-all duration-200"
            >
              <Mail className="h-3 w-3 sm:h-4 sm:w-4" />
              <span className="hidden sm:inline">Contactează-ne</span>
              <span className="sm:hidden">Contact</span>
            </Button>
            {/* Added Message Counter */}
            <div className="flex items-center">
              <span className="text-gray-600">Mesaje</span>
            </div>
            <LoginDropdown />
          </div>
        </div>
      </div>
    </nav>
  );
}

TESTIMONIAL 

import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { ChevronLeft, ChevronRight } from "lucide-react";

const testimonials = [
  {
    name: "Cătălin A.",
    testimonial: "CARVIZIO mi-a economisit timp și bani! Am primit rapid cotații de preț și am ales cel mai bun service.",
    rating: 5,
    image: "https://i.ibb.co/kST9nRv/Catalin.jpg"
  },
  {
    name: "Alina A.",
    testimonial: "Aplicatia este super simplu de folosit și am găsit un service foarte bun în zona mea.",
    rating: 5,
    image: "https://i.ibb.co/1rhxnQ6/Alina.jpg"
  },
  {
    name: "Alexandru I.",
    testimonial: "Recomand CARVIZIO tuturor! Am găsit un service de încredere și am programat rapid o revizie.",
    rating: 5,
    image: "https://i.ibb.co/TgnCb33/Alexandru.jpg"
  },
  {
    name: "Maria D.",
    testimonial: "Am găsit rapid un service care m-a ajutat cu problema la mașină, la un preț corect. Serviciile sunt excelente și totul a fost transparent.",
    rating: 5,
    image: "https://i.ibb.co/Mgp43wv/Maria.jpg"
  }
];

export default function TestimonialCarousel() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [direction, setDirection] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => {
      setDirection(1);
      setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);
    }, 5000);

    return () => clearInterval(timer);
  }, []);

  const slideVariants = {
    enter: (direction: number) => ({
      x: direction > 0 ? 1000 : -1000,
      opacity: 0
    }),
    center: {
      zIndex: 1,
      x: 0,
      opacity: 1
    },
    exit: (direction: number) => ({
      zIndex: 0,
      x: direction < 0 ? 1000 : -1000,
      opacity: 0
    })
  };

  const swipeConfidenceThreshold = 10000;
  const swipePower = (offset: number, velocity: number) => {
    return Math.abs(offset) * velocity;
  };

  const paginate = (newDirection: number) => {
    setDirection(newDirection);
    setCurrentIndex((prevIndex) => {
      const nextIndex = prevIndex + newDirection;
      if (nextIndex < 0) return testimonials.length - 1;
      if (nextIndex >= testimonials.length) return 0;
      return nextIndex;
    });
  };

  return (
    <div className="bg-gradient-to-r from-blue-50 to-blue-100 py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-4xl font-extrabold text-center text-gray-900 sm:text-5xl mb-12">
          Ce spun utilizatorii <span className="text-[#00aff5]">CARVIZIO</span>
        </h2>
        <div className="relative h-[400px] overflow-hidden">
          <AnimatePresence initial={false} custom={direction}>
            <motion.div
              key={currentIndex}
              custom={direction}
              variants={slideVariants}
              initial="enter"
              animate="center"
              exit="exit"
              transition={{
                x: { type: "spring", stiffness: 300, damping: 30 },
                opacity: { duration: 0.2 }
              }}
              drag="x"
              dragConstraints={{ left: 0, right: 0 }}
              dragElastic={1}
              onDragEnd={(e, { offset, velocity }) => {
                const swipe = swipePower(offset.x, velocity.x);

                if (swipe < -swipeConfidenceThreshold) {
                  paginate(1);
                } else if (swipe > swipeConfidenceThreshold) {
                  paginate(-1);
                }
              }}
              className="absolute w-full"
            >
              <div className="flex justify-center items-center h-full">
                <div className="bg-white rounded-lg shadow-xl p-8 max-w-2xl mx-auto transform transition-all duration-300 hover:scale-105">
                  <div className="flex items-center space-x-4">
                    <img
                      src={testimonials[currentIndex].image}
                      alt={testimonials[currentIndex].name}
                      className="h-16 w-16 rounded-full object-cover ring-4 ring-[#00aff5]"
                    />
                    <div>
                      <h3 className="text-xl font-semibold text-gray-900">
                        {testimonials[currentIndex].name}
                      </h3>
                      <div className="flex items-center mt-1">
                        {[...Array(testimonials[currentIndex].rating)].map((_, i) => (
                          <svg
                            key={i}
                            className="h-5 w-5 text-yellow-500"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path
                              fillRule="evenodd"
                              d="M10 15l-5.402 3.24 1.033-5.876L.61 6.83l5.977-.535L10 1l2.413 4.77 5.977.535-4.021 5.534 1.033 5.876L10 15z"
                              clipRule="evenodd"
                            />
                          </svg>
                        ))}
                      </div>
                    </div>
                  </div>
                  <p className="mt-6 text-lg text-gray-600 italic">
                    "{testimonials[currentIndex].testimonial}"
                  </p>
                </div>
              </div>
            </motion.div>
          </AnimatePresence>

          {/* Navigation Buttons */}
          <button
            className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/80 rounded-full p-2 hover:bg-white transition-all duration-200"
            onClick={() => paginate(-1)}
          >
            <ChevronLeft className="w-6 h-6 text-gray-800" />
          </button>
          <button
            className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/80 rounded-full p-2 hover:bg-white transition-all duration-200"
            onClick={() => paginate(1)}
          >
            <ChevronRight className="w-6 h-6 text-gray-800" />
          </button>

          {/* Dots Navigation */}
          <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
            {testimonials.map((_, index) => (
              <button
                key={index}
                className={`w-2 h-2 rounded-full transition-all duration-200 ${
                  index === currentIndex ? "bg-[#00aff5] w-4" : "bg-gray-300"
                }`}
                onClick={() => {
                  setDirection(index > currentIndex ? 1 : -1);
                  setCurrentIndex(index);
                }}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

